#!/usr/bin/env python

import atexit
import argparse
import os.path
import signal
import subprocess
import time
import webbrowser


SCRIPTS_DIR = os.path.dirname(os.path.abspath(__file__))
ROOT_DIR = os.path.dirname(SCRIPTS_DIR)
ANSIBLE_DIR = os.path.join(ROOT_DIR, "ansible")
SITE_DIR = os.path.join(ROOT_DIR, "site")
BUILD_DIR = os.path.join(SITE_DIR, "_site")


def build():
    print "Building site..."
    os.chdir(SITE_DIR)
    subprocess.check_call(["jekyll", "build"])


def process_terminator(process):

    def inner():
        os.kill(process.pid, signal.SIGTERM)

    return inner


def serve():
    print "Serving site..."
    os.chdir(SITE_DIR)
    process = subprocess.Popen(["jekyll", "serve"])
    time.sleep(1)
    webbrowser.open("http://127.0.0.1:4000")
    atexit.register(process_terminator(process))
    process.communicate()


def deploy():
    print "Deploying site..."
    os.chdir(ANSIBLE_DIR)
    subprocess.check_call(["ansible-playbook", "gameplaycolor.yml"])    


def command_build(parser):

    def inner(options):
        build()

    return inner


def command_serve(parser):

    def inner(options):
        serve()

    return inner


def command_deploy(parser):

    def inner(options):
        build()
        deploy()

    return inner


def add_command(subparsers, name, command, help=""):
  parser = subparsers.add_parser(name, help=help)
  fn = command(parser)
  parser.set_defaults(fn=fn)


def main():
    parser = argparse.ArgumentParser(description="Site management script.")
    subparsers = parser.add_subparsers(help="Command to run.")
    add_command(subparsers, name="build", command=command_build, help="Build the site.")
    add_command(subparsers, name="serve", command=command_serve, help="Serve the site.")
    add_command(subparsers, name="deploy", command=command_deploy, help="Deploy the site.")
    options = parser.parse_args()
    options.fn(options)


if __name__ == "__main__":
    main()
